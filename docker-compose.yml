version: '3.7'
services:
  frontend:
    container_name: frontend
    restart: always
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./static_volume:/home/app/microservice/static
    depends_on:
      - django
    restart: "on-failure"
  redis:
    container_name: redis
    image: "redis:latest"
    expose:
      - "6379"
  django:
    container_name: django
    build: ./django
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    uvicorn project.asgi:application --host 0.0.0.0 --port ${APP_PORT} --reload"
    volumes:
      - .:/microservice
      - ./static_volume:/home/app/microservice/static
      - ./django:/home/app/webapp
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    ports:
      - "8000:8000"
    image: trascendence_app
    expose:
      - ${APP_PORT}
    restart: "on-failure"
    depends_on:
      - db
      - redis

  db:
    image: postgres:16.1-alpine3.18
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${DB_DATA_PATH}:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - "5432:5432"
    restart: "on-failure"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: ${DB_DATA_PATH}
  django_sources:
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: ./django
  static_volume:
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: ./data/static
