input {
  file {
    path => "/app/logs/debug.log"
    start_position => "beginning"
  }
  http_poller {
    urls => {
      my_service_metrics => "http://prometheus:9090"
    }
    request_timeout => 60
    schedule => { every => "10s" }
    codec => "plain" # Dado que Prometheus utiliza texto plano para sus métricas
  }
}

filter {
  # Filtro para el archivo de logs
  if [path] == "/app/logs/debug.log" {
    grok {
      match => { "message" => "\(%{NUMBER:query_time}\) %{GREEDYDATA:sql_query}" }
    }
  }
  
  # Filtro para las métricas de Prometheus
  if [host] == "prometheus" {
    if [message] =~ /^#/ {
      drop {} # Descartar líneas de comentarios en métricas Prometheus
    } else {
      kv {
        field_split => "\n" # Split por saltos de línea
        value_split => " "  # Split de clave/valor por espacio
        remove_char_key => "#" # Elimina el carácter '#' al principio de las claves
        remove_char_value => "\"" # Elimina las comillas en los valores
        source => "message"  # Fuente del mensaje
        target => "prometheus_metrics" # Campo de destino para las métricas procesadas
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "web-logs-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "changeme"
  }
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "prometheus-metrics-%{+YYYY.MM.dd}"
  }
}

